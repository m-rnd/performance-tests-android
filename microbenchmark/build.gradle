plugins {
    id 'com.android.library'
    id 'androidx.benchmark'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.example.microbenchmark'
    compileSdk androidConfig.compileSdk

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        minSdk androidConfig.minSdk
        targetSdk androidConfig.targetSdk

        testInstrumentationRunner 'androidx.benchmark.junit4.AndroidBenchmarkRunner'
    }

    flavorDimensions "platform"
    productFlavors {
        'native' {
            dimension "platform"
        }
        'flutter' {
            dimension "platform"
        }
    }

    testBuildType = "release"
    buildTypes {
        debug {
            // Since debuggable can"t be modified by gradle for library modules,
            // it must be done in a manifest - see src/androidTest/AndroidManifest.xml
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "benchmark-proguard-rules.pro"
        }
        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
        release {
            isDefault = true
        }
    }
}

dependencies {
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.benchmark:benchmark-junit4:1.1.1'

    implementation "com.google.dagger:hilt-android:${google.hilt_version}"


    androidTestImplementation "com.google.dagger:hilt-android-testing:${google.hilt_version}"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:${google.hilt_version}"

    // Add your dependencies here. Note that you cannot benchmark code
    // in an app module this way - you will need to move any code you
    // want to benchmark to a library module:
    // https://developer.android.com/studio/projects/android-library#Convert
    androidTestImplementation project(':entity')
    androidTestImplementation project(':benchmarkable')

    androidTestFlutterImplementation project(':ds_flutter')
    androidTestFlutterImplementation project(path: ':flutter')
    androidTestNativeImplementation project(':ds_native')
}